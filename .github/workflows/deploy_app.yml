name: Deploy It All

on:
  push:
    branches: [main]

jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2

      - name: Run Docker Build
        run: |
          docker build -t local .

      - name: Run terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          docker run \
            -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
            -v `pwd`:/home/app local sh \
            -c "cd infra && terraform init && terraform apply -auto-approve"

  deploy_api:
    needs: deploy_infra
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2

      - name: Install modules
        run: yarn

      - name: Set env
        run: |
          echo "REGION=us-east-1" >> $GITHUB_ENV
          echo "HOST_NAME=https://newsletter.webdevcody.com" >> $GITHUB_ENV
          echo "DYNAMO_ENDPOINT=dynamodb.us-east-1.amazonaws.com" >> $GITHUB_ENV
          echo "SES_ENDPOINT=email.us-east-1.amazonaws.com" >> $GITHUB_ENV
          echo "TABLE_NAME=webdevcody_newsletter" >> $GITHUB_ENV

      - name: Deploy api
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: yarn deploy:api

  deploy_ui:
    needs: deploy_infra
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2

      - name: Install modules
        run: yarn

      - name: Set env
        run: |
          echo "NEXT_PUBLIC_API_URL=https://newsletter-api.webdevcody.com" >> $GITHUB_ENV

      - name: Deploy ui
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          yarn workspace @wdc-newsletter/ui build
          aws s3 sync ./ui/out s3://newsletter.webdevcody.com/ --delete --region us-east-1
          ./infra/invalidate-cloudfront.sh
